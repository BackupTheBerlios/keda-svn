/****************************************************************************
** Composer meta object code from reading C++ file 'composer.h'
**
** Created: Sat Jun 9 10:35:22 2007
**      by: The Qt MOC ($Id: qt/moc_yacc.cpp   3.3.5   edited Sep 2 14:41 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#undef QT_NO_COMPAT
#include "composer.h"
#include <qmetaobject.h>
#include <qapplication.h>

#include <private/qucomextra_p.h>
#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
#error "This file was generated using the moc from 3.3.5. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

const char *Composer::className() const
{
    return "Composer";
}

QMetaObject *Composer::metaObj = 0;
static QMetaObjectCleanUp cleanUp_Composer( "Composer", &Composer::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString Composer::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "Composer", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString Composer::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "Composer", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* Composer::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = KMainWindow::staticMetaObject();
    static const QUParameter param_slot_0[] = {
	{ "url", &static_QUType_ptr, "KURL", QUParameter::In }
    };
    static const QUMethod slot_0 = {"load", 1, param_slot_0 };
    static const QUMethod slot_1 = {"part_new", 0, 0 };
    static const QUMethod slot_2 = {"part_open", 0, 0 };
    static const QUMethod slot_3 = {"part_save", 0, 0 };
    static const QUMethod slot_4 = {"part_delete", 0, 0 };
    static const QUMethod slot_5 = {"filePrint", 0, 0 };
    static const QUMethod slot_6 = {"optionsPreferences", 0, 0 };
    static const QUParameter param_slot_7[] = {
	{ "text", &static_QUType_QString, 0, QUParameter::In }
    };
    static const QUMethod slot_7 = {"changeStatusbar", 1, param_slot_7 };
    static const QUParameter param_slot_8[] = {
	{ "text", &static_QUType_QString, 0, QUParameter::In }
    };
    static const QUMethod slot_8 = {"changeCaption", 1, param_slot_8 };
    static const QMetaData slot_tbl[] = {
	{ "load(const KURL&)", &slot_0, QMetaData::Public },
	{ "part_new()", &slot_1, QMetaData::Private },
	{ "part_open()", &slot_2, QMetaData::Private },
	{ "part_save()", &slot_3, QMetaData::Private },
	{ "part_delete()", &slot_4, QMetaData::Private },
	{ "filePrint()", &slot_5, QMetaData::Private },
	{ "optionsPreferences()", &slot_6, QMetaData::Private },
	{ "changeStatusbar(const QString&)", &slot_7, QMetaData::Private },
	{ "changeCaption(const QString&)", &slot_8, QMetaData::Private }
    };
    metaObj = QMetaObject::new_metaobject(
	"Composer", parentObject,
	slot_tbl, 9,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_Composer.setMetaObject( metaObj );
    return metaObj;
}

void* Composer::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "Composer" ) )
	return this;
    return KMainWindow::qt_cast( clname );
}

bool Composer::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: load((const KURL&)*((const KURL*)static_QUType_ptr.get(_o+1))); break;
    case 1: part_new(); break;
    case 2: part_open(); break;
    case 3: part_save(); break;
    case 4: part_delete(); break;
    case 5: filePrint(); break;
    case 6: optionsPreferences(); break;
    case 7: changeStatusbar((const QString&)static_QUType_QString.get(_o+1)); break;
    case 8: changeCaption((const QString&)static_QUType_QString.get(_o+1)); break;
    default:
	return KMainWindow::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool Composer::qt_emit( int _id, QUObject* _o )
{
    return KMainWindow::qt_emit(_id,_o);
}
#ifndef QT_NO_PROPERTIES

bool Composer::qt_property( int id, int f, QVariant* v)
{
    return KMainWindow::qt_property( id, f, v);
}

bool Composer::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES
