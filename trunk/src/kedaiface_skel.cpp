/****************************************************************************
**
** DCOP Skeleton generated by dcopidl2cpp from kedaiface.kidl
**
** WARNING! All changes made in this file will be lost!
**
*****************************************************************************/

#include "/home/bastl/Kdevel/Keda/trunk/src/kedaiface.h"

#include <kdatastream.h>


static const char* const KedaIface_ftable[2][3] = {
    { "void", "openURL(QString)", "openURL(QString url)" },
    { 0, 0, 0 }
};
static const int KedaIface_ftable_hiddens[1] = {
    0,
};

bool KedaIface::process(const QCString &fun, const QByteArray &data, QCString& replyType, QByteArray &replyData)
{
    if ( fun == KedaIface_ftable[0][1] ) { // void openURL(QString)
	QString arg0;
	QDataStream arg( data, IO_ReadOnly );
	if (arg.atEnd()) return false;
	arg >> arg0;
	replyType = KedaIface_ftable[0][0]; 
	openURL(arg0 );
    } else {
	return DCOPObject::process( fun, data, replyType, replyData );
    }
    return true;
}

QCStringList KedaIface::interfaces()
{
    QCStringList ifaces = DCOPObject::interfaces();
    ifaces += "KedaIface";
    return ifaces;
}

QCStringList KedaIface::functions()
{
    QCStringList funcs = DCOPObject::functions();
    for ( int i = 0; KedaIface_ftable[i][2]; i++ ) {
	if (KedaIface_ftable_hiddens[i])
	    continue;
	QCString func = KedaIface_ftable[i][0];
	func += ' ';
	func += KedaIface_ftable[i][2];
	funcs << func;
    }
    return funcs;
}


