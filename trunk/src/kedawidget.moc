/****************************************************************************
** KedaWidget meta object code from reading C++ file 'kedawidget.h'
**
** Created: Sat Jun 9 09:34:11 2007
**      by: The Qt MOC ($Id: qt/moc_yacc.cpp   3.3.5   edited Sep 2 14:41 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#undef QT_NO_COMPAT
#include "kedawidget.h"
#include <qmetaobject.h>
#include <qapplication.h>

#include <private/qucomextra_p.h>
#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
#error "This file was generated using the moc from 3.3.5. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

const char *KedaWidget::className() const
{
    return "KedaWidget";
}

QMetaObject *KedaWidget::metaObj = 0;
static QMetaObjectCleanUp cleanUp_KedaWidget( "KedaWidget", &KedaWidget::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString KedaWidget::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "KedaWidget", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString KedaWidget::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "KedaWidget", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* KedaWidget::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QWidget::staticMetaObject();
    static const QUMethod slot_0 = {"boards_clicked", 0, 0 };
    static const QUMethod slot_1 = {"logicals_clicked", 0, 0 };
    static const QUMethod slot_2 = {"linears_clicked", 0, 0 };
    static const QUMethod slot_3 = {"ops_clicked", 0, 0 };
    static const QUMethod slot_4 = {"resistors_clicked", 0, 0 };
    static const QUMethod slot_5 = {"diodes_clicked", 0, 0 };
    static const QUMethod slot_6 = {"leds_clicked", 0, 0 };
    static const QUMethod slot_7 = {"diacs_clicked", 0, 0 };
    static const QUMethod slot_8 = {"triacs_clicked", 0, 0 };
    static const QUMethod slot_9 = {"transistors_clicked", 0, 0 };
    static const QUMethod slot_10 = {"tyristors_clicked", 0, 0 };
    static const QUMethod slot_11 = {"conectors_clicked", 0, 0 };
    static const QUMethod slot_12 = {"switches_clicked", 0, 0 };
    static const QUMethod slot_13 = {"trafos_clicked", 0, 0 };
    static const QUMethod slot_14 = {"heatsinks_clicked", 0, 0 };
    static const QUMethod slot_15 = {"cases_clicked", 0, 0 };
    static const QUMethod slot_16 = {"custom_clicked", 0, 0 };
    static const QUMethod slot_17 = {"part_group_clicked", 0, 0 };
    static const QUMethod slot_18 = {"capacitor_clicked", 0, 0 };
    static const QUMethod slot_19 = {"coil_clicked", 0, 0 };
    static const QUMethod slot_20 = {"others_clicked", 0, 0 };
    static const QUMethod slot_21 = {"languageChange", 0, 0 };
    static const QMetaData slot_tbl[] = {
	{ "boards_clicked()", &slot_0, QMetaData::Public },
	{ "logicals_clicked()", &slot_1, QMetaData::Public },
	{ "linears_clicked()", &slot_2, QMetaData::Public },
	{ "ops_clicked()", &slot_3, QMetaData::Public },
	{ "resistors_clicked()", &slot_4, QMetaData::Public },
	{ "diodes_clicked()", &slot_5, QMetaData::Public },
	{ "leds_clicked()", &slot_6, QMetaData::Public },
	{ "diacs_clicked()", &slot_7, QMetaData::Public },
	{ "triacs_clicked()", &slot_8, QMetaData::Public },
	{ "transistors_clicked()", &slot_9, QMetaData::Public },
	{ "tyristors_clicked()", &slot_10, QMetaData::Public },
	{ "conectors_clicked()", &slot_11, QMetaData::Public },
	{ "switches_clicked()", &slot_12, QMetaData::Public },
	{ "trafos_clicked()", &slot_13, QMetaData::Public },
	{ "heatsinks_clicked()", &slot_14, QMetaData::Public },
	{ "cases_clicked()", &slot_15, QMetaData::Public },
	{ "custom_clicked()", &slot_16, QMetaData::Public },
	{ "part_group_clicked()", &slot_17, QMetaData::Public },
	{ "capacitor_clicked()", &slot_18, QMetaData::Public },
	{ "coil_clicked()", &slot_19, QMetaData::Public },
	{ "others_clicked()", &slot_20, QMetaData::Public },
	{ "languageChange()", &slot_21, QMetaData::Protected }
    };
    metaObj = QMetaObject::new_metaobject(
	"KedaWidget", parentObject,
	slot_tbl, 22,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_KedaWidget.setMetaObject( metaObj );
    return metaObj;
}

void* KedaWidget::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "KedaWidget" ) )
	return this;
    return QWidget::qt_cast( clname );
}

bool KedaWidget::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: boards_clicked(); break;
    case 1: logicals_clicked(); break;
    case 2: linears_clicked(); break;
    case 3: ops_clicked(); break;
    case 4: resistors_clicked(); break;
    case 5: diodes_clicked(); break;
    case 6: leds_clicked(); break;
    case 7: diacs_clicked(); break;
    case 8: triacs_clicked(); break;
    case 9: transistors_clicked(); break;
    case 10: tyristors_clicked(); break;
    case 11: conectors_clicked(); break;
    case 12: switches_clicked(); break;
    case 13: trafos_clicked(); break;
    case 14: heatsinks_clicked(); break;
    case 15: cases_clicked(); break;
    case 16: custom_clicked(); break;
    case 17: part_group_clicked(); break;
    case 18: capacitor_clicked(); break;
    case 19: coil_clicked(); break;
    case 20: others_clicked(); break;
    case 21: languageChange(); break;
    default:
	return QWidget::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool KedaWidget::qt_emit( int _id, QUObject* _o )
{
    return QWidget::qt_emit(_id,_o);
}
#ifndef QT_NO_PROPERTIES

bool KedaWidget::qt_property( int id, int f, QVariant* v)
{
    return QWidget::qt_property( id, f, v);
}

bool KedaWidget::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES
